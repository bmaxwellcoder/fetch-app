// Generated by view binder compiler. Do not edit!
package com.example.fetchapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fetchapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGroupCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView expandCollapseIcon;

  @NonNull
  public final TextView groupHeaderTextView;

  @NonNull
  public final LinearLayout headerRow;

  @NonNull
  public final LinearLayout itemsContainer;

  private ItemGroupCardBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView expandCollapseIcon, @NonNull TextView groupHeaderTextView,
      @NonNull LinearLayout headerRow, @NonNull LinearLayout itemsContainer) {
    this.rootView = rootView;
    this.expandCollapseIcon = expandCollapseIcon;
    this.groupHeaderTextView = groupHeaderTextView;
    this.headerRow = headerRow;
    this.itemsContainer = itemsContainer;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGroupCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGroupCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_group_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGroupCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expandCollapseIcon;
      ImageView expandCollapseIcon = ViewBindings.findChildViewById(rootView, id);
      if (expandCollapseIcon == null) {
        break missingId;
      }

      id = R.id.groupHeaderTextView;
      TextView groupHeaderTextView = ViewBindings.findChildViewById(rootView, id);
      if (groupHeaderTextView == null) {
        break missingId;
      }

      id = R.id.headerRow;
      LinearLayout headerRow = ViewBindings.findChildViewById(rootView, id);
      if (headerRow == null) {
        break missingId;
      }

      id = R.id.itemsContainer;
      LinearLayout itemsContainer = ViewBindings.findChildViewById(rootView, id);
      if (itemsContainer == null) {
        break missingId;
      }

      return new ItemGroupCardBinding((MaterialCardView) rootView, expandCollapseIcon,
          groupHeaderTextView, headerRow, itemsContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
